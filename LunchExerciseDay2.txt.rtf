{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fnil\fcharset0 Menlo-Bold;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww21620\viewh13280\viewkind0
\deftab720
\pard\pardeftab720

\f0\b\fs24 \cf0 *** DAY 2 - LUNCH EXERCISE ***
\b0 \
\
Explore .SAM file generated during last night's homework (accepted_hits.sam?)\
\

\b Basic Exercises
\b0 \
\
NOTE: place all your Python code into a file and add it to your Github repository\
\
1. Count number of alignments\
\'a0 - HINT: counter variable\
\

\b #!/usr/bin/env python\
\
accepted_hits = "/Users/cmdb/data/SRR072893_output/accepted_hits.sam"\
\
f = open(accepted_hits)\
\
while True:\
    line = f.readline() \
    if line == "":\
        break\
    print f.readline()
\b0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\f1\b\fs22 \cf0 \CocoaLigature0 /Users/cmdb/data/day2 $ ./LunchExercise2.py | wc -l\
 18417212
\f0\b0\fs24 \CocoaLigature1 \
\pard\pardeftab720
\cf0 \
2. Count number of alignments that match perfectly to the genome\
\'a0 - HINT: google sam format optional fields\
\

\b #!/usr/bin/env python\
\
accepted_hits = "/Users/cmdb/data/SRR072893_output/accepted_hits.sam"\
\
f = open(accepted_hits)\
\
for line in f:\
    if "NM:i:0" in line:\
        print line,
\b0 \
 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\f1\b\fs22 \cf0 \CocoaLigature0 /Users/cmdb/data/day2 $ ./LunchExercise2.py | wc -l\
 14079052 
\f2\b0 \
\pard\pardeftab720

\f0\fs24 \cf0 \CocoaLigature1 \
\
3. Count number of reads that map to exactly one location in the genome\
\'a0 - HINT: number of hits\
\

\b #!/usr/bin/env python\
\
accepted_hits = "/Users/cmdb/data/SRR072893_output/accepted_hits.sam"\
\
f = open(accepted_hits)\
\
for line in f:\
    if "NH:i:1" in line:\
        print line,
\b0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\f1\b\fs22 \cf0 \CocoaLigature0 /Users/cmdb/data/day2 $ ./LunchExercise2.py | wc -l\
 17444398
\f2\b0 \

\f0\fs24 \CocoaLigature1 \
\pard\pardeftab720
\cf0 4. Extract just the column indicating which chromosome read aligns too\
\'a0 - HINT: .split()\
\

\b #!/usr/bin/env python\
\
accepted_hits = "/Users/cmdb/data/SRR072893_output/accepted_hits.sam"\
\pard\pardeftab720

\fs22 \cf0 \
f = open(accepted_hits)
\fs24 \
\
\
for i, line in enumerate(f):\
    fields = line.rstrip("\\r\\n").split("\\t")\
    print fields[2]\
\pard\pardeftab720

\b0 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\f1\b\fs22 \cf0 \CocoaLigature0 /Users/cmdb/data/day2 $ ./LunchExercise2.py | wc -l
\f2\b0 \
\pard\pardeftab720

\f0\fs24 \cf0 \CocoaLigature1 \
5. Calculate how many alignments are on chromosome 2L 2R 3L 3R 4 X (keep track separately)\
\'a0 - HINT: make individual counter variables (or a list)\
\
6. Calculate average MAPQ score\
\'a0 - HINT: counter and total variables\
\
7. Count number of reads that start their alignment on chromosome 2L between base 10000 and 20000 (inclusive)\
\'a0 - HINT: and\
\
\
\

\b Advanced Exercises
\b0 \
\
1. Find position at which the most reads start their alignment\
\'a0 - HINT 1: Python version of `cut -f3,4 accepted_hits.sam | sort | uniq -c | sort -n`\
\'a0 - HINT 2: google for python "uniq -c"\
\
2. How many reads map to the reverse strand?\
\'a0 - HINT 1: sam flag 0x10 bit\
\'a0 - HINT 2: stackoverflow.com/questions/2591483/getting-a-specific-bit-value-in-a-byte-string\
\
3. Determine how many reads have an average quality score >30\
\'a0 - HINT 1: fastq wiki phred+33\
\'a0 - HINT 2: stackoverflow.com/questions/227459/ascii-value-of-a-character-in-python\
}